/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package charityfinder;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.DriverManager;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JScrollPane;
import java.sql.ResultSet;
import javax.swing.SwingUtilities;

/**
 *
 * @author deeks_5t46200
 */
public class CharityLi extends javax.swing.JFrame {

    private DefaultListModel<String> listModel;
    private JList<String> charityLi;
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/CharityFinder";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "qwerty@123!";
    
    /**
     * Creates new form CharityLi
     */
    public CharityLi() {
        initComponents();
         jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                addCharity();
                
            }
        });
         
          jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                deleteCharity();
                
            }
        });
         // Initialize components
        listModel = new DefaultListModel<>();
        
        // Fetch and populate charity list
        fetchAndPopulateCharities();
       
       charityLi = new JList<>(listModel);
JScrollPane scrollPane = new JScrollPane(charityLi);
 // Assign the charityList to jList1

// Set layout manager
setLayout(new BorderLayout());

// Add components to the frame
add(scrollPane, BorderLayout.CENTER);

        
        

        // Set up the frame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 300);
        setLocationRelativeTo(null);
        setVisible(true);
      
         
         
     
        

        
         charityLi.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    // Double-click detected
                    int selectedIndex = charityLi.getSelectedIndex();
                    if (selectedIndex != -1) {
                        String selectedCharity = listModel.getElementAt(selectedIndex);
                        // Add logic to view full details based on the selected charity
                        viewFullDetails(selectedCharity);
                    }
                }
            }
        });
    }

    private void viewFullDetails(String charityName) {
        new CharityDetails(charityName).setVisible(true);
    }
        
  private void addCharity(){
        AddCharity add=new AddCharity();
        add.setVisible(true);
                this.dispose();
    }
  
  
     private void deleteCharity(){
        DeleteCharity add=new DeleteCharity();
        add.setVisible(true);
                this.dispose();
    }
  private void fetchAndPopulateCharities() {
      SwingUtilities.invokeLater(() -> {
    try (java.sql.Connection connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD)) {
        // Create SQL statement
        java.sql.Statement statement = connection.createStatement();

        // Execute query
        ResultSet resultSet = statement.executeQuery("SELECT `chid`, `chname` FROM `charity`");

        // Process results and populate JList
        while (resultSet.next()) {
            int charityId = resultSet.getInt("chid");
            String charityName = resultSet.getString("chname");
            listModel.addElement("ID: " + charityId + " - " + charityName);
        }

        
        
        // Close resources
        resultSet.close();
        statement.close();
        connection.close();

    } catch (Exception e) {
        e.printStackTrace();
    }

    // Print debug information
    System.out.println("Charities fetched and populated: " + listModel.size());
      });
}

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setFont(new java.awt.Font("Footlight MT Light", 1, 18)); // NOI18N
        setForeground(new java.awt.Color(0, 0, 0));

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jButton1.setText("Add new Charity");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 153, 153));
        jButton2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jButton2.setText("Delete Charity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(214, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CharityLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CharityLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CharityLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharityLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CharityLi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
